local eKph9Dx3xunSeNsyuy20sdcNLQjEAY853g3F6wDaDlsLyP3F6B = Instance.new("ScreenGui")
local BackGround = Instance.new("Frame")
local LS = Instance.new("TextLabel")
local ProgressBar = Instance.new("TextLabel")
local BackGroundLoader = Instance.new("Frame")
local ScrollingFrame = Instance.new("ScrollingFrame")
local TextBox = Instance.new("TextBox")
local TextButton = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
eKph9Dx3xunSeNsyuy20sdcNLQjEAY853g3F6wDaDlsLyP3F6B.Name = "eKph9Dx3xunSeNsyuy20sdcNLQjEAY853g3F6wDaDlsLyP3F6B"
eKph9Dx3xunSeNsyuy20sdcNLQjEAY853g3F6wDaDlsLyP3F6B.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
eKph9Dx3xunSeNsyuy20sdcNLQjEAY853g3F6wDaDlsLyP3F6B.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
BackGround.Name = "BackGround"
BackGround.Parent = eKph9Dx3xunSeNsyuy20sdcNLQjEAY853g3F6wDaDlsLyP3F6B
BackGround.BackgroundColor3 = Color3.fromRGB(10, 10, 50)
BackGround.BorderColor3 = Color3.fromRGB(0, 0, 0)
BackGround.BorderSizePixel = 0
BackGround.Position = UDim2.new(0.3, 0, 0.2, 0)
BackGround.Size = UDim2.new(0, 500, 0, 500)
BackGround.BackgroundTransparency = 0.1
LS.Name = "LS"
LS.Parent = BackGround
LS.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LS.BackgroundTransparency = 1.000
LS.BorderColor3 = Color3.fromRGB(0, 0, 0)
LS.BorderSizePixel = 0
LS.Position = UDim2.new(0.25, 0, 0.3, 0)
LS.Size = UDim2.new(0, 250, 0, 150)
LS.Font = Enum.Font.Jura
LS.Text = "LS"
LS.TextColor3 = Color3.fromRGB(0, 170, 255)
LS.TextSize = 120.000
LS.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
LS.TextStrokeTransparency = 0.8
LS.TextWrapped = true
ProgressBar.Name = "ProgressBar"
ProgressBar.Parent = BackGround
ProgressBar.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ProgressBar.BackgroundTransparency = 1.000
ProgressBar.BorderColor3 = Color3.fromRGB(0, 0, 0)
ProgressBar.BorderSizePixel = 0
ProgressBar.Position = UDim2.new(0.2, 0, 0.7, 0)
ProgressBar.Size = UDim2.new(0, 300, 0, 50)
ProgressBar.Font = Enum.Font.Code
ProgressBar.Text = "Loading"
ProgressBar.TextColor3 = Color3.fromRGB(194, 194, 194)
ProgressBar.TextSize = 28.000
BackGroundLoader.Name = "BackGroundLoader"
BackGroundLoader.Parent = eKph9Dx3xunSeNsyuy20sdcNLQjEAY853g3F6wDaDlsLyP3F6B
BackGroundLoader.BackgroundColor3 = Color3.fromRGB(10, 10, 50)
BackGroundLoader.BorderColor3 = Color3.fromRGB(0, 0, 0)
BackGroundLoader.BorderSizePixel = 0
BackGroundLoader.Position = UDim2.new(0.2, 0, 0.15, 0)
BackGroundLoader.Size = UDim2.new(0, 700, 0, 500)
BackGroundLoader.Visible = false
BackGroundLoader.BackgroundTransparency = 0.1
ScrollingFrame.Parent = BackGroundLoader
ScrollingFrame.Active = true
ScrollingFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 60)
ScrollingFrame.BackgroundTransparency = 0.1
ScrollingFrame.BorderColor3 = Color3.fromRGB(0, 0, 0)
ScrollingFrame.BorderSizePixel = 0
ScrollingFrame.Position = UDim2.new(0.03, 0, 0.1, 0)
ScrollingFrame.Size = UDim2.new(0, 350, 0, 400)
ScrollingFrame.BottomImage = ""
ScrollingFrame.MidImage = ""
ScrollingFrame.ScrollBarThickness = 8
ScrollingFrame.ScrollBarImageColor3 = Color3.fromRGB(0, 170, 255)
ScrollingFrame.CanvasSize = UDim2.new(0, 0, 2, 0)
TextBox.Parent = ScrollingFrame
TextBox.Active = false
TextBox.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
TextBox.BackgroundTransparency = 1.000
TextBox.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextBox.BorderSizePixel = 0
TextBox.Position = UDim2.new(0.02, 0, 0, 0)
TextBox.Size = UDim2.new(0, 340, 0, 803)
TextBox.ClearTextOnFocus = false
TextBox.TextEditable = false
TextBox.Font = Enum.Font.SourceSans
TextBox.PlaceholderColor3 = Color3.fromRGB(194, 194, 194)
TextBox.Text = "Загрузка логов обновлений..."
TextBox.TextColor3 = Color3.fromRGB(194, 194, 194)
TextBox.TextSize = 14.000
TextBox.TextWrapped = true
TextBox.TextXAlignment = Enum.TextXAlignment.Left
TextBox.TextYAlignment = Enum.TextYAlignment.Top
TextButton.Parent = BackGroundLoader
TextButton.BackgroundColor3 = Color3.fromRGB(0, 85, 255)
TextButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextButton.BorderSizePixel = 0
TextButton.Position = UDim2.new(0.57, 0, 0.7, 0)
TextButton.Size = UDim2.new(0, 250, 0, 60)
TextButton.Font = Enum.Font.Jura
TextButton.Text = "Load Lolsense"
TextButton.TextColor3 = Color3.fromRGB(255, 255, 255)
TextButton.TextSize = 36.000
UICorner.Parent = TextButton
TextLabel.Parent = BackGroundLoader
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
TextLabel.BorderSizePixel = 0
TextLabel.Position = UDim2.new(0.57, 0, 0.1, 0)
TextLabel.Size = UDim2.new(0, 250, 0, 100)
TextLabel.Font = Enum.Font.Jura
TextLabel.Text = "LS" -- Изменено на LS
TextLabel.TextColor3 = Color3.fromRGB(0, 170, 255)
TextLabel.TextSize = 64.000
local BackGroundCorner = Instance.new("UICorner")
BackGroundCorner.CornerRadius = UDim.new(0, 15)
BackGroundCorner.Parent = BackGround
local BackGroundLoaderCorner = Instance.new("UICorner")
BackGroundLoaderCorner.CornerRadius = UDim.new(0, 15)
BackGroundLoaderCorner.Parent = BackGroundLoader
local ScrollingFrameCorner = Instance.new("UICorner")
ScrollingFrameCorner.CornerRadius = UDim.new(0, 10)
ScrollingFrameCorner.Parent = ScrollingFrame
local BackGroundStroke = Instance.new("UIStroke")
BackGroundStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
BackGroundStroke.Color = Color3.fromRGB(0, 170, 255)
BackGroundStroke.LineJoinMode = Enum.LineJoinMode.Round
BackGroundStroke.Thickness = 3
BackGroundStroke.Parent = BackGround
local BackGroundLoaderStroke = Instance.new("UIStroke")
BackGroundLoaderStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
BackGroundLoaderStroke.Color = Color3.fromRGB(0, 170, 255)
BackGroundLoaderStroke.LineJoinMode = Enum.LineJoinMode.Round
BackGroundLoaderStroke.Thickness = 3
BackGroundLoaderStroke.Parent = BackGroundLoader
local BetaButton = Instance.new("TextButton")
BetaButton.Name = "BetaButton"
BetaButton.Parent = BackGroundLoader
BetaButton.BackgroundColor3 = Color3.fromRGB(255, 165, 0)
BetaButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
BetaButton.BorderSizePixel = 0
BetaButton.Position = UDim2.new(0.57, 0, 0.55, 0) 
BetaButton.Size = UDim2.new(0, 250, 0, 60)
BetaButton.Font = Enum.Font.Jura
BetaButton.Text = "Load Beta"
BetaButton.TextColor3 = Color3.fromRGB(255, 255, 255)
BetaButton.TextSize = 36.000
local BetaButtonCorner = Instance.new("UICorner")
BetaButtonCorner.Parent = BetaButton
local UI_URL_STABLE = "https://raw.githubusercontent.com/Febik/Library-ui/refs/heads/main/aswe"
local UI_URL_BETA = "https://raw.githubusercontent.com/Febik/Library-ui/refs/heads/main/beta"
-- Добавляем URL для логов обновлений
local LOGS_URL = "https://raw.githubusercontent.com/Febik/Library-ui/refs/heads/main/logs"
local LOADED_TAG = "SkipLoadingFileAllLoaded_1q234567890"
local FOLDER_NAME = "Lolsense"
local FILE_NAME = "Loaded.txt"
local PlayerGui = game.Players.LocalPlayer:WaitForChild("PlayerGui")
local GUI = eKph9Dx3xunSeNsyuy20sdcNLQjEAY853g3F6wDaDlsLyP3F6B
local Loading = GUI:WaitForChild("BackGround")
local prog = Loading:WaitForChild("ProgressBar")
local Loader = GUI:WaitForChild("BackGroundLoader")
local Button = Loader:WaitForChild("TextButton")
local BetaBtn = Loader:WaitForChild("BetaButton")
local LogsTextBox = Loader:WaitForChild("ScrollingFrame"):WaitForChild("TextBox")

-- Функция для загрузки логов с GitHub
local function loadLogsFromGitHub()
    local success, result = pcall(function()
        return game:HttpGet(LOGS_URL)
    end)
    
    if success then
        return result
    else
        return "Ошибка загрузки логов с GitHub\n\n" .. "version 1.3.6\n[ + ] improved Killaura\n[ ! ] cooldown 0.1 its RapidHit [Rage]\n[ ! ] cooldown 1 its legithit [Legit]\n[ ! ] Team select in killaura not working\nversion 1.3.5\n[ + ] Helper\n[ + ] AutoArrest (Helper)\n[ + ] AutoTaser (Helper)\n[ + ] Heal System\n[ + ] Support Heal tools: Medical Kit, Large Medical Kit, Quik-Fix, Medigun (Heal System)\n[ + ] Select Heal Team (Heal System)\n[ + ] Select Range Heal (Heal System)\n[ + ] Custom Title [Client-Side]\nversion 1.2.6\n[ + ] Killaura Module\n[ + ] Killaura Range (Killaura Module)\n[ + ] Killaura white list (Killaura Module)\n[ + ] Show Target (Killaura Module)\n[ + ] ESP Module\n[ + ] Type Esp: Gradient,Rainbow,Custom (ESP Module)\n[ + ] ShopTab [beta]\n[ + ] Patient Shop Module\n[ + ] Patient Weapons [Pt Shop]\n[ + ] Invisible [Malicious]\n[ + ] Malicious Module\n[ + ] TP-Hands Module\n[ + ] TP-hands Range (TP-Hands Module)\n[ + ] WalkSpeed Module\n[ + ] WalkSpeed change [WalkSpeed Module]\n[ + ] HipHeight change [WalkSpeed Module]\n[ + ] GodMode [Troll Button] [Malicious]\n[ + ] Ban Alt Bypass [Only Rejoin] [Malicious]\n[ + ] Pick Up Staff/Elevator Card [Malicious]\n[ + ] AntiRagdoll Standart [Malicious]\n[ + ] AntiRagdoll [beta] [Malicious]\n[ + ] AntiAfk [Malicious]\n[ + ] EmoteTab\n[ + ] AutoFarm Module\n[ + ] SkipTutorial [AutoFarm]\n[ + ] AutoEscape [AutoFarm]\n[ + ] AutoClearSpills [AutoFarm]\n[ - ] Visuals Module\nversion 1.1.3\n[ + ] Visuals Module\n[ + ] Аssistant\n[ + ] Assistant Models\n[ + ] Assistant Range\n[ + ] Assistant Music\n[ + ] Assistant Follow player Type: Orbit,Spiral,Smooth Follow\n[ + ] Assistant Lighting\nversion 1.0.5\n[ / ] New Menu"
    end
end

local function makeDraggable(frame)
    local dragging = false
    local dragInput, mousePos, framePos
    
    local function smoothMove(newPos)
        local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = game:GetService("TweenService"):Create(frame, tweenInfo, {Position = newPos})
        tween:Play()
    end
    
    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            mousePos = input.Position
            framePos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - mousePos
            local newPos = UDim2.new(
                framePos.X.Scale, 
                framePos.X.Offset + delta.X,
                framePos.Y.Scale, 
                framePos.Y.Offset + delta.Y
            )
            smoothMove(newPos)
        end
    end)
end
makeDraggable(BackGround)
makeDraggable(BackGroundLoader)
local function createLoadingAnimation()
    local loadingContainer = Instance.new("Frame")
    loadingContainer.Name = "LoadingAnimation"
    loadingContainer.BackgroundTransparency = 1
    loadingContainer.Size = UDim2.new(1, 0, 0, 120)
    loadingContainer.Position = UDim2.new(0, 0, 0.5, 0)
    loadingContainer.Parent = Loading
    
    local dots = {}
    for i = 1, 5 do
        local dot = Instance.new("Frame")
        dot.Name = "Dot" .. i
        dot.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
        dot.Size = UDim2.new(0, 20, 0, 20)
        dot.Position = UDim2.new(0.3 + (i * 0.1), 0, 0.5, 0)
        dot.Parent = loadingContainer
        
        local dotCorner = Instance.new("UICorner")
        dotCorner.CornerRadius = UDim.new(1, 0)
        dotCorner.Parent = dot
        
        table.insert(dots, dot)
    end
    
    local function animateDots()
        while Loading.Visible do
            for i, dot in ipairs(dots) do
                local tweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
                
                local tweenUp = game:GetService("TweenService"):Create(dot, tweenInfo, {
                    Position = UDim2.new(dot.Position.X.Scale, dot.Position.X.Offset, 0.3, 0),
                    Size = UDim2.new(0, 25, 0, 25)
                })
                local tweenDown = game:GetService("TweenService"):Create(dot, tweenInfo, {
                    Position = UDim2.new(dot.Position.X.Scale, dot.Position.X.Offset, 0.5, 0),
                    Size = UDim2.new(0, 20, 0, 20)
                })
                
                tweenUp:Play()
                wait(0.15)
                tweenDown:Play()
                wait(0.15)
            end
            wait(0.3)
        end
    end
    
    spawn(animateDots)
end
local function fixScrolling()
    TextBox.Active = true
    TextBox.TextEditable = false
    
    local function updateCanvasSize()
        local textHeight = TextBox.TextBounds.Y
        ScrollingFrame.CanvasSize = UDim2.new(0, 0, 0, textHeight + 50)
    end
    
    -- Загружаем логи с GitHub при инициализации
    spawn(function()
        local logsText = loadLogsFromGitHub()
        TextBox.Text = logsText
        wait(0.1)
        updateCanvasSize()
    end)
    
    TextBox:GetPropertyChangedSignal("Text"):Connect(updateCanvasSize)
end
local function addButtonEffects(button, isBeta)
    local originalColor = button.BackgroundColor3
    local originalSize = button.Size
    local hoverSize = UDim2.new(0, originalSize.X.Offset + 10, 0, originalSize.Y.Offset + 5)
    local clickSize = UDim2.new(0, originalSize.X.Offset - 10, 0, originalSize.Y.Offset - 5)
    
    local hoverColor = isBeta and Color3.fromRGB(255, 140, 0) or Color3.fromRGB(0, 120, 255)
    local clickColor = isBeta and Color3.fromRGB(200, 100, 0) or Color3.fromRGB(0, 60, 200)
    
    button.MouseEnter:Connect(function()
        local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = game:GetService("TweenService"):Create(button, tweenInfo, {
            BackgroundColor3 = hoverColor,
            Size = hoverSize
        })
        tween:Play()
    end)
    
    button.MouseLeave:Connect(function()
        local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = game:GetService("TweenService"):Create(button, tweenInfo, {
            BackgroundColor3 = originalColor,
            Size = originalSize
        })
        tween:Play()
    end)
    
    button.MouseButton1Down:Connect(function()
        local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = game:GetService("TweenService"):Create(button, tweenInfo, {
            BackgroundColor3 = clickColor,
            Size = clickSize
        })
        tween:Play()
    end)
    
    button.MouseButton1Up:Connect(function()
        local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        local tween = game:GetService("TweenService"):Create(button, tweenInfo, {
            BackgroundColor3 = hoverColor,
            Size = hoverSize
        })
        tween:Play()
    end)
end

-- // Функции файловой системы
local function IsLoadedBefore()
	if isfolder and isfile then
		if isfolder(FOLDER_NAME) and isfile(FOLDER_NAME .. "/" .. FILE_NAME) then
			local data = readfile(FOLDER_NAME .. "/" .. FILE_NAME)
			return data == LOADED_TAG
		end
	end
	return false
end

local function MarkAsLoaded()
	if makefolder and writefile then
		if not isfolder(FOLDER_NAME) then
			makefolder(FOLDER_NAME)
		end
		writefile(FOLDER_NAME .. "/" .. FILE_NAME, LOADED_TAG)
	end
end

-- // Функция загрузки внешнего UI
local function LoadExternalUI(url, isBeta)
	local versionName = isBeta and "Beta" or "Stable"
	
	local success, result = pcall(function()
		return game:HttpGet(url)
	end)
	
	if not success then
		warn("[Lolsense] Не удалось скачать UI " .. versionName .. ": " .. tostring(result))
        Library.SendNotification({
            title = "Lolsense " .. versionName,
            text = "Ошибка загрузки " .. versionName .. " версии",
            duration = 5
        })
		return
	end

	local func, err = loadstring(result)
	if not func then
		warn("[Lolsense] loadstring ошибка (" .. versionName .. "): " .. tostring(err))
        Library.SendNotification({
            title = "Lolsense " .. versionName,
            text = "Ошибка загрузки скрипта",
            duration = 5
        })
		return
	end

	local ok2, err2 = pcall(func)
	if not ok2 then
		warn("[Lolsense] Ошибка при запуске UI (" .. versionName .. "): " .. tostring(err2))
        Library.SendNotification({
            title = "Lolsense " .. versionName,
            text = "Ошибка выполнения скрипта",
            duration = 5
        })
	else
		Library.SendNotification({
            title = "Lolsense " .. versionName,
            text = versionName .. " версия успешно загружена!",
            duration = 5
        })
	end
end

-- // ИНИЦИАЛИЗАЦИЯ
createLoadingAnimation()
fixScrolling()
addButtonEffects(Button, false) -- Обычная кнопка
addButtonEffects(BetaBtn, true)  -- Бета кнопка

-- // ЛОГИКА ЗАГРУЗКИ
if IsLoadedBefore() then
	Loading.Visible = false
	Loader.Visible = true
else
	task.spawn(function()
		local loadingSteps = {
			"Initializing LS...",
			"Loading assets...", 
			"Checking dependencies...",
			"Almost there...",
			"Ready to load!"
		}
		
		for i, step in ipairs(loadingSteps) do
			prog.Text = step
			wait(1.5)
		end
		
		Loading.Visible = false
		Loader.Visible = true
		MarkAsLoaded()
	end)
end

Button.MouseButton1Click:Connect(function()
    -- Сначала делаем tween только для цвета
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = game:GetService("TweenService"):Create(Button, tweenInfo, {
        BackgroundColor3 = Color3.fromRGB(0, 200, 0)
    })
    tween:Play()
    
    -- Меняем текст вручную, отдельно
    Button.Text = "Loading Stable..."
    
    wait(0.5)
    Loader.Visible = false
    LoadExternalUI(UI_URL_STABLE, false)
end)
BetaBtn.Visible = false
BetaBtn.MouseButton1Click:Connect(function()
    local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local tween = game:GetService("TweenService"):Create(BetaBtn, tweenInfo, {
        BackgroundColor3 = Color3.fromRGB(255, 200, 0)
    })
    tween:Play()
    
    BetaBtn.Text = "Loading Beta..."
    
    wait(0.5)
    Loader.Visible = false
    LoadExternalUI(UI_URL_BETA, true)
end)
